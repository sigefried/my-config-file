# rebind backward search to fix ctrl-r broken in tmux
bindkey -e

## audocomplete
autoload -U compinit promptinit
compinit
promptinit

## using colors
autoload -Uz colors
colors


# modified right side prompt to shwo git information
#RPROMPT="[%{$fg_no_bold[red]%}%?%{$reset_color%}]"

## prevent overwriting when there is no newline
unsetopt promptcr

# make aliases distinct command
setopt complete_aliases
## first subject to parameter expansion
setopt prompt_subst

## nobeep
setopt nobeep
# list jop in long format by default
setopt long_list_jobs
# list the type
setopt list_types

# not autoremove slash
setopt noautoremoveslash

## auto resume the jop
setopt auto_resume

# automatically list choice on ambiguous choice
setopt auto_list
# list in packed format
setopt list_packed

## ignore duplicate history
setopt hist_ignore_dups

## cd auto  push
setopt autopushd

## do not push same dir
setopt pushd_ignore_dups

## extend the ~ etc.
setopt extended_glob

## using tab change manu
setopt auto_menu

## writng start&end time to histtory
setopt extended_history

## perform =filename expandshing
setopt equals

## magic subst
setopt magic_equal_subst

## when call the history; only reload the line
setopt hist_verify

# sort in numeric order
setopt numeric_glob_sort

## auto complete brack
setopt auto_param_keys
## share history
setopt share_history


#print char in eight_bit
setopt print_eightbit
## auto add slash to dir
setopt auto_param_slash
## enable completion colors
zstyle ':completion:*:default' menu select=1

## colorizing the completion list
#eval `dircolors`
export LSCOLORS=ExFxCxdxBxegedabagacad
export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export ZLS_COLORS=$LS_COLORS
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

## customize prompt
PROMPT="[%{$fg[green]%}%n%{$reset_color%}@%{$fg[cyan]%}%m %{$fg_no_bold[magenta]%}%1~ %{$reset_color%}]%# "

# setup rprompt with git
#
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes false
turn_on_git_stage_check() {
  zstyle ':vcs_info:*' check-for-changes true
}
#zstyle ':vcs_info:*' stagedstr '!'
#zstyle ':vcs_info:*' unstagedstr '?'
zstyle ':vcs_info:git*' formats "%{$fg[cyan]%}[%b]%{$reset_color%}(%{$fg[green]%}%c%{$reset_color%}%{$fg[red]%}%u%{$reset_color%})"
#zstyle ':vcs_info:git*' formats "%{$fg[green]%}%s %{$reset_color%}%r/%S%{$fg[grey]%} %{$fg[blue]%}%b%{$reset_color%}%m%u%c%{$reset_color%} "
#zstyle ':vcs_info:git*' formats "%s  %r/%S %b %m%u%c "

RPROMPT=\$vcs_info_msg_0_

# fzf
if [ -f ~/.fzf.zsh ]
then
  source ~/.fzf.zsh
  export FZF_DEFAULT_OPTS="--reverse --height 40% \
    --color fg:-1,bg:-1,hl:230,fg+:3,bg+:233,hl+:229\
    --color info:150,prompt:110,spinner:150,pointer:167,marker:174"
fi

# enhanced cd
if [ -f ~/bin/enhancd/init.sh ]
then
  export ENHANCD_COMMAND=ecd
  source ~/bin/enhancd/init.sh
fi


#git related config
if [ -f ~/zsh-plugin/git.plugin.zsh ]
then
  turn_on_git_stage_check
  source ~/zsh-plugin/git.plugin.zsh
fi

# auto suggestion
if [ -f ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]
then
  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

#source alias
if [ -f "$HOME/.zsh_aliases" ]; then
  source ~/.zsh_aliases
fi



# rust
#source $HOME/.cargo/env
